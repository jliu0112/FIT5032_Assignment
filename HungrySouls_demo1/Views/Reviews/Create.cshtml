@model HungrySouls_demo1.Models.Review

@{
    ViewBag.Title = "Create";
}
@ViewBag.Overall
<h2>Leave Your Comment</h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal" style="margin: 0 auto">
    <p>
        <br />
        <br />
        <br />
    </p>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.ClientID, "ClientID", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("ClientID", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ClientID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.RatingLevel, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.RadioButtonFor(model => model.RatingLevel, "1", new { id = "Poor" })@Html.Label("Poor", "Poor")
            @Html.RadioButtonFor(model => model.RatingLevel, "2", new { id = "Fair" })@Html.Label("Fair", "Fair")
            @Html.RadioButtonFor(model => model.RatingLevel, "3", new { id = "Good" })@Html.Label("Good", "Good")
            @Html.RadioButtonFor(model => model.RatingLevel, "4", new { id = "Great" })@Html.Label("Great", "Great")
            @Html.RadioButtonFor(model => model.RatingLevel, "5", new { id = "Excellent" })@Html.Label("Excellent", "Excellent")
            @*@Html.EnumDropDownListFor(model => model.RatingLevel, htmlAttributes: new { @class = "form-control" })*@
            @Html.ValidationMessageFor(model => model.RatingLevel, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Comments, new { htmlAttributes = new { @class = "form-control", @id = "mytextarea" } })
            @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Comment" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.Action("DataPoint")
    @Html.ActionLink("Back to List", "Index")
</div>
@section Scripts{
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        tinymce.init({
            selector: '#mytextarea'
        });
    </script>
}